on:
  push:
    branches:
      - 'master'
jobs:
 metadata: 
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: generate matrix
        id: generate-matrix  
        run: |
          ls -ltr;
          git fetch --all
          RELEASE_FEATURE_BRANCHES=`git branch -a --list '*RC*'`;          
          for branch in $RELEASE_FEATURE_BRANCHES; 
          do
            echo 'Current Development Release branches are - ' $branch
          done    
          MATRIX_RELEASE_BRANCHES_JSON="["
          for BRANCHES in ${RELEASE_FEATURE_BRANCHES}; 
          do
             release_branch=${BRANCHES};
             echo "Release branch is in for loop" $release_branch
             some_variable=$("${release_branch}" | sed -e 's#^remotes/origin/##')
             echo "After stripping remotes/origin current for in " ${some_variable}
             MATRIX_RELEASE_BRANCHES_JSON+=$(sed 's/^/"/;s/$/"/' <<< "${BRANCHES}")
          done
          MATRIX_RELEASE_BRANCHES_JSON="${MATRIX_RELEASE_BRANCHES_JSON//\"\"/\", \"}"
          MATRIX_RELEASE_BRANCHES_JSON+="]"
          MATRIX_JSON="{\"branches\": ${MATRIX_RELEASE_BRANCHES_JSON}}"
          echo "${MATRIX_JSON}"
          echo "::set-output name=matrix::${MATRIX_JSON}"
 pullRequestToReleaseBranches:
    needs: metadata
    runs-on: ubuntu-latest
    strategy:
     matrix: ${{ fromJson(needs.metadata.outputs.matrix) }}
    steps:               
     - uses: actions/checkout@v2
       with:
          ref: '${{ matrix.branches }}'    
      
     - name: Create report file
       run: date +%s > report.txt
        
     - name: Reset promotion branch
       run: |
            git fetch origin master:master
            git reset --hard master
     - name: Set output variables
       id: vars
       run: |
              echo "::set-output name=pr_title::Pr into Release Branch from Master after the release $(date +%d-%m-%Y)"
              echo "::set-output name=pr_body::This PR was auto-generated on $(date +%d-%m-%Y) \
                by [create-pull-request](https://github.com/AAInternal/AMPS-API)."     
              echo "::set-output name=pr_commit_message::GitHub <noreply@github.com>"
     - name: Create Pull Request
       uses: peter-evans/create-pull-request@v3
       with:
            token: ${{ secrets.GITHUB_TOKEN }}
            commit-message:  ${{ steps.vars.outputs.pr_commit_message }}
            committer: GitHub <noreply@github.com> 
            author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
            body: ${{ steps.vars.outputs.pr_body }}
            title: ${{ steps.vars.outputs.pr_title }}
            labels: automated pr
            assignees: Sudeep.kumar.varma.Ganapathiraju@aa.com
            reviewers: Preetish.Madalia@aa.com        
            branch: 'master_promotion_${{ matrix.branch }}'
          
    
